use alloy_primitives::{aliases::B32, fixed_bytes};

pub const CHURN_LIMIT_QUOTIENT: u64 = 65536;
pub const EFFECTIVE_BALANCE_INCREMENT: u64 = 1_000_000_000;
pub const EPOCHS_PER_HISTORICAL_VECTOR: u64 = 65536;
pub const GENESIS_SLOT: u64 = 0;
pub const GENESIS_EPOCH: u64 = 0;
pub const INTERVALS_PER_SLOT: u64 = 3;
pub const MAX_SEED_LOOKAHEAD: u64 = 4;
pub const MAX_EFFECTIVE_BALANCE: u64 = 32_000_000_000;
pub const MAX_RANDOM_BYTE: u64 = 255;
pub const MIN_PER_EPOCH_CHURN_LIMIT: u64 = 4;
pub const PROPOSER_SCORE_BOOST: u64 = 40;
pub const REORG_MAX_EPOCHS_SINCE_FINALIZATION: u64 = 2;
pub const REORG_HEAD_WEIGHT_THRESHOLD: u64 = 20;
pub const REORG_PARENT_WEIGHT_THRESHOLD: u64 = 160;
pub const SECONDS_PER_SLOT: u64 = 12;
pub const SHUFFLE_ROUND_COUNT: u8 = 90;
pub const SLOTS_PER_EPOCH: u64 = 32;
pub const SLOTS_PER_HISTORICAL_ROOT: u64 = 8192;
pub const MIN_SEED_LOOKAHEAD: u64 = 1;
pub const MAX_COMMITTEES_PER_SLOT: u64 = 64;
pub const TARGET_COMMITTEE_SIZE: u64 = 128;
pub const DOMAIN_BEACON_PROPOSER: B32 = fixed_bytes!("00000000");
pub const DOMAIN_BEACON_ATTESTER: B32 = fixed_bytes!("01000000");
